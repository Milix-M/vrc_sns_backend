"""Change Column names

Revision ID: 65d12023acdd
Revises: 8f2947b7343f
Create Date: 2024-02-07 09:37:46.743429

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "65d12023acdd"
down_revision: Union[str, None] = "8f2947b7343f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("posts", sa.Column("user_id", sa.Integer(), nullable=True))
    op.drop_constraint("posts_userid_fkey", "posts", type_="foreignkey")
    op.create_foreign_key(
        None,
        "posts",
        "users",
        ["user_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("posts", "userid")
    op.add_column("users", sa.Column("display_id", sa.String(), nullable=True))
    op.drop_constraint("users_userid_key", "users", type_="unique")
    op.create_unique_constraint(None, "users", ["display_id"])
    op.drop_column("users", "userid")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("userid", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "users", type_="unique")
    op.create_unique_constraint("users_userid_key", "users", ["userid"])
    op.drop_column("users", "display_id")
    op.add_column(
        "posts", sa.Column("userid", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "posts", type_="foreignkey")
    op.create_foreign_key(
        "posts_userid_fkey",
        "posts",
        "users",
        ["userid"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("posts", "user_id")
    # ### end Alembic commands ###
